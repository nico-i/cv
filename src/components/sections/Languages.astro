---
import Card from '@/components/ui/Card.astro';
import GradedListItem from '@/components/ui/GradedListItem.astro';
import SectionTitle from '@/components/ui/SectionTitle.astro';
import Svg from '@/components/ui/Svg.astro';
import LanguagesIcon from '@/svg/languages.svg?raw';
import databaseClient from 'tina/__generated__/databaseClient';
import { t } from 'i18next';
import type { LanguagesQuery } from 'tina/__generated__/types';

const langConnections = (await databaseClient.queries.LanguagesConnection({}))
  .data.LanguagesConnection.edges;

const langs: NonNullable<LanguagesQuery['Languages']>[] = [];

langConnections?.forEach((edge) => {
  if (edge?.node) {
    langs.push(edge.node);
  }
});
---

{
  langs.length > 0 && (
    <Card>
      <Fragment slot="title">
        <SectionTitle title={t('langs')} svgHtml={LanguagesIcon} />
      </Fragment>
      <Fragment slot="content">
        <ul class="flex flex-col gap-1.5 hide-bullets">
          {langs.map((lang) => {
            return (
              <GradedListItem grade={lang.level} docUrl={lang.document || null}>
                <span slot="title">
                  <Svg svgUrl={lang.icon} className="w-6" />
                  &hairsp;
                  {lang.name}
                </span>
              </GradedListItem>
            );
          })}
        </ul>
      </Fragment>
    </Card>
  )
}
